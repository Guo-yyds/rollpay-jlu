{"ast":null,"code":"import { employeeReport } from '@/api/employee';\nexport default {\n  data() {\n    return {\n      kind: '0',\n      name: this.$store.state.userInfo.username,\n      startDate: '',\n      endDate: '',\n      projectid: '',\n      answer: ''\n    };\n  },\n  methods: {\n    validFn() {\n      if (this.name === '') {\n        this.$message.error('姓名不能为空');\n        return false;\n      }\n      if (this.startDate === '') {\n        this.$message.error('开始日期不能为空');\n        return false;\n      }\n      if (this.endDate === '') {\n        this.$message.error('结束日期不能为空');\n        return false;\n      }\n      return true;\n    },\n    async submit() {\n      if (!this.validFn()) {\n        return;\n      }\n      const res = await employeeReport(this.kind, this.name, this.startDate, this.endDate);\n      console.log(res);\n      if (res.code !== 1) {\n        this.$message.error(res.msg);\n      } else {\n        this.answer = res.data;\n      }\n    },\n    async downloadFile() {\n      try {\n        const opts = {\n          types: [{\n            description: '文件',\n            accept: {\n              'text/plain': ['.txt'],\n              'application/pdf': ['.pdf'],\n              'image/jpeg': ['.jpg', '.jpeg'],\n              'image/png': ['.png']\n            }\n          }],\n          excludeAcceptAllOption: true\n        };\n        const handle = await window.showSaveFilePicker(opts); // 打开保存文件对话框\n        const writable = await handle.createWritable(); // 创建可写入的文件对象\n\n        // 在这里写入文件内容\n        await writable.write(JSON.stringify(this.answer));\n        await writable.close();\n        console.log('文件保存成功');\n        this.$message.success('文件保存成功');\n      } catch (error) {\n        console.error('文件保存失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["employeeReport","data","kind","name","$store","state","userInfo","username","startDate","endDate","projectid","answer","methods","validFn","$message","error","submit","res","console","log","code","msg","downloadFile","opts","types","description","accept","excludeAcceptAllOption","handle","window","showSaveFilePicker","writable","createWritable","write","JSON","stringify","close","success"],"sources":["src/views/employeeReport.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template>\r\n      <el-radio v-model=\"kind\" label=\"0\">Total Hours Worked</el-radio>\r\n      <el-radio v-model=\"kind\" label=\"1\">Total Hours Worked for a Project</el-radio>\r\n      <el-radio v-model=\"kind\" label=\"2\">Vacation/Sick Leave</el-radio>\r\n      <el-radio v-model=\"kind\" label=\"3\">Total Pay Year-to-Date</el-radio>\r\n    </template>\r\n    <br><br>\r\n    <el-input v-if=\"kind == 1\" v-model=\"projectid\" placeholder=\"请输入项目id\"></el-input>\r\n    <br>\r\n    <br>\r\n    <div class=\"block\">\r\n      <span class=\"demonstration\">开始日期&nbsp;</span>\r\n      <el-date-picker\r\n        v-model=\"startDate\"\r\n        type=\"date\"\r\n        placeholder=\"选择日期\">\r\n      </el-date-picker>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <span class=\"demonstration\">结束日期&nbsp;</span>\r\n      <el-date-picker\r\n        v-model=\"endDate\"\r\n        type=\"date\"\r\n        placeholder=\"选择日期\">\r\n      </el-date-picker>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <el-button type=\"primary\" @click=\"submit\">查询</el-button>\r\n    结果是：{{ answer.answer }}\r\n    <br>\r\n    <br>\r\n    <el-button type=\"primary\" @click=\"downloadFile\">下载文件</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { employeeReport } from '@/api/employee'\r\nexport default {\r\n  data () {\r\n    return {\r\n      kind: '0',\r\n      name: this.$store.state.userInfo.username,\r\n      startDate: '',\r\n      endDate: '',\r\n      projectid: '',\r\n      answer: ''\r\n    }\r\n  },\r\n  methods: {\r\n    validFn () {\r\n      if (this.name === '') {\r\n        this.$message.error('姓名不能为空')\r\n        return false\r\n      }\r\n      if (this.startDate === '') {\r\n        this.$message.error('开始日期不能为空')\r\n        return false\r\n      }\r\n      if (this.endDate === '') {\r\n        this.$message.error('结束日期不能为空')\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    async submit () {\r\n      if (!this.validFn()) {\r\n        return\r\n      }\r\n      const res = await employeeReport(\r\n        this.kind,\r\n        this.name,\r\n        this.startDate,\r\n        this.endDate\r\n      )\r\n      console.log(res)\r\n      if (res.code !== 1) {\r\n        this.$message.error(res.msg)\r\n      } else {\r\n        this.answer = res.data\r\n      }\r\n    },\r\n    async downloadFile () {\r\n      try {\r\n        const opts = {\r\n          types: [\r\n            {\r\n              description: '文件',\r\n              accept: {\r\n                'text/plain': ['.txt'],\r\n                'application/pdf': ['.pdf'],\r\n                'image/jpeg': ['.jpg', '.jpeg'],\r\n                'image/png': ['.png']\r\n              }\r\n            }\r\n          ],\r\n          excludeAcceptAllOption: true\r\n        }\r\n\r\n        const handle = await window.showSaveFilePicker(opts) // 打开保存文件对话框\r\n        const writable = await handle.createWritable() // 创建可写入的文件对象\r\n\r\n        // 在这里写入文件内容\r\n        await writable.write(JSON.stringify(this.answer))\r\n        await writable.close()\r\n\r\n        console.log('文件保存成功')\r\n        this.$message.success('文件保存成功')\r\n      } catch (error) {\r\n        console.error('文件保存失败:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"mappings":"AAsCA,SAAAA,cAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA;MACAC,SAAA;MACAC,OAAA;MACAC,SAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,SAAAV,IAAA;QACA,KAAAW,QAAA,CAAAC,KAAA;QACA;MACA;MACA,SAAAP,SAAA;QACA,KAAAM,QAAA,CAAAC,KAAA;QACA;MACA;MACA,SAAAN,OAAA;QACA,KAAAK,QAAA,CAAAC,KAAA;QACA;MACA;MACA;IACA;IACA,MAAAC,OAAA;MACA,UAAAH,OAAA;QACA;MACA;MACA,MAAAI,GAAA,SAAAjB,cAAA,CACA,KAAAE,IAAA,EACA,KAAAC,IAAA,EACA,KAAAK,SAAA,EACA,KAAAC,OACA;MACAS,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,IAAAA,GAAA,CAAAG,IAAA;QACA,KAAAN,QAAA,CAAAC,KAAA,CAAAE,GAAA,CAAAI,GAAA;MACA;QACA,KAAAV,MAAA,GAAAM,GAAA,CAAAhB,IAAA;MACA;IACA;IACA,MAAAqB,aAAA;MACA;QACA,MAAAC,IAAA;UACAC,KAAA,GACA;YACAC,WAAA;YACAC,MAAA;cACA;cACA;cACA;cACA;YACA;UACA,EACA;UACAC,sBAAA;QACA;QAEA,MAAAC,MAAA,SAAAC,MAAA,CAAAC,kBAAA,CAAAP,IAAA;QACA,MAAAQ,QAAA,SAAAH,MAAA,CAAAI,cAAA;;QAEA;QACA,MAAAD,QAAA,CAAAE,KAAA,CAAAC,IAAA,CAAAC,SAAA,MAAAxB,MAAA;QACA,MAAAoB,QAAA,CAAAK,KAAA;QAEAlB,OAAA,CAAAC,GAAA;QACA,KAAAL,QAAA,CAAAuB,OAAA;MACA,SAAAtB,KAAA;QACAG,OAAA,CAAAH,KAAA,YAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}