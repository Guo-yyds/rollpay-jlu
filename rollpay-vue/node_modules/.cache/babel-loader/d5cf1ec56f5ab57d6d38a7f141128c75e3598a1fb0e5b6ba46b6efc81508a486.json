{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      dataList: [],\n      // 数据列表\n      total: 0,\n      // 总记录数\n      currentPage: 1,\n      // 当前页码\n      pageSize: 10 // 每页显示的记录数\n    };\n  },\n\n  mounted() {\n    this.getDataList(); // 初始化时获取数据列表\n  },\n\n  methods: {\n    // 获取数据列表\n    getDataList() {\n      // 根据当前页码和每页记录数发送请求获取数据列表\n      // 示例中使用 setTimeout 模拟异步请求\n      setTimeout(() => {\n        // 假设从后端获取的数据为 response\n        const response = {\n          total: 100,\n          // 总记录数\n          data: [{\n            id: 1,\n            name: '数据1'\n          }, {\n            id: 2,\n            name: '数据2'\n          }\n          // ...\n          ]\n        };\n\n        // 更新数据列表和总记录数\n        this.dataList = response.data;\n        this.total = response.total;\n      }, 500);\n    },\n    // 当前页码改变时触发\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getDataList(); // 获取对应页码的数据列表\n    },\n\n    logout() {\n      this.$store.dispatch('logout');\n      this.$router.push('/adminLogin');\n    }\n  }\n};","map":{"version":3,"names":["data","dataList","total","currentPage","pageSize","mounted","getDataList","methods","setTimeout","response","id","name","handleCurrentChange","logout","$store","dispatch","$router","push"],"sources":["src/views/adminHome.vue"],"sourcesContent":["<template>\r\n  <el-container style=\"height: 500px; border: 1px solid #eee\">\r\n    <el-aside width=\"200px\" style=\"background-color: rgb(238, 241, 246)\">\r\n      <el-menu :default-openeds=\"['1', '3']\">\r\n        <el-menu-item><i class=\"el-icon-s-custom\"></i>管理员工</el-menu-item>\r\n        <el-menu-item><i class=\"el-icon-document\"></i>生成管理员报告</el-menu-item>\r\n      </el-menu>\r\n    </el-aside>\r\n\r\n    <el-container>\r\n      <el-header style=\"text-align: right; font-size: 16px\">\r\n        用户名:\r\n        <span>{{this.$store.state.userInfo.username}}</span>\r\n        <!-- 空格 -->\r\n        &nbsp;&nbsp;\r\n        <el-button @click=\"logout\">退出登录</el-button>\r\n      </el-header>\r\n\r\n      <el-main>\r\n\r\n        <!-- 数据列表 -->\r\n        <ul>\r\n          <li v-for=\"item in dataList\" :key=\"item.id\">{{ item.name }}</li>\r\n        </ul>\r\n\r\n        <!-- 分页组件 -->\r\n        <el-pagination\r\n          :total=\"total\"\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          @current-change=\"handleCurrentChange\"\r\n        ></el-pagination>\r\n\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n<style>\r\n  .el-header {\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    line-height: 60px;\r\n  }\r\n\r\n  .el-aside {\r\n    color: #333;\r\n  }\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      dataList: [], // 数据列表\r\n      total: 0, // 总记录数\r\n      currentPage: 1, // 当前页码\r\n      pageSize: 10 // 每页显示的记录数\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getDataList() // 初始化时获取数据列表\r\n  },\r\n  methods: {\r\n    // 获取数据列表\r\n    getDataList () {\r\n      // 根据当前页码和每页记录数发送请求获取数据列表\r\n      // 示例中使用 setTimeout 模拟异步请求\r\n      setTimeout(() => {\r\n        // 假设从后端获取的数据为 response\r\n        const response = {\r\n          total: 100, // 总记录数\r\n          data: [\r\n            { id: 1, name: '数据1' },\r\n            { id: 2, name: '数据2' }\r\n            // ...\r\n          ]\r\n        }\r\n\r\n        // 更新数据列表和总记录数\r\n        this.dataList = response.data\r\n        this.total = response.total\r\n      }, 500)\r\n    },\r\n    // 当前页码改变时触发\r\n    handleCurrentChange (currentPage) {\r\n      this.currentPage = currentPage\r\n      this.getDataList() // 获取对应页码的数据列表\r\n    },\r\n    logout () {\r\n      this.$store.dispatch('logout')\r\n      this.$router.push('/adminLogin')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAkDA;EACAA,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,KAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;;EACAC,OAAA;IACA;IACAD,YAAA;MACA;MACA;MACAE,UAAA;QACA;QACA,MAAAC,QAAA;UACAP,KAAA;UAAA;UACAF,IAAA,GACA;YAAAU,EAAA;YAAAC,IAAA;UAAA,GACA;YAAAD,EAAA;YAAAC,IAAA;UAAA;UACA;UAAA;QAEA;;QAEA;QACA,KAAAV,QAAA,GAAAQ,QAAA,CAAAT,IAAA;QACA,KAAAE,KAAA,GAAAO,QAAA,CAAAP,KAAA;MACA;IACA;IACA;IACAU,oBAAAT,WAAA;MACA,KAAAA,WAAA,GAAAA,WAAA;MACA,KAAAG,WAAA;IACA;;IACAO,OAAA;MACA,KAAAC,MAAA,CAAAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}