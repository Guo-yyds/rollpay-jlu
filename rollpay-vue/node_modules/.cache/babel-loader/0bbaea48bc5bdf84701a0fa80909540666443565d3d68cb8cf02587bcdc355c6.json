{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nconst Login = () => import('@/views/login');\nVue.use(VueRouter);\nconst router = new VueRouter({\n  routes: [{\n    path: '/login',\n    component: Login\n  }]\n});\n\n// 所有的路由在真正被访问到之前(解析渲染对应组件页面前)，都会先经过全局前置守卫\n// 只有全局前置守卫放行了，才会到达对应的页面\n\n// 全局前置导航守卫\n// to:   到哪里去，到哪去的完整路由信息对象 (路径，参数)\n// from: 从哪里来，从哪来的完整路由信息对象 (路径，参数)\n// next(): 是否放行\n// (1) next()     直接放行，放行到to要去的路径\n// (2) next(路径)  进行拦截，拦截到next里面配置的路径\n\n// 定义一个数组，专门用户存放所有需要权限访问的页面\nconst authUrls = ['/pay', '/myorder'];\nrouter.beforeEach((to, from, next) => {\n  // console.log(to, from, next)\n  // 看 to.path 是否在 authUrls 中出现过\n  if (!authUrls.includes(to.path)) {\n    // 非权限页面，直接放行\n    next();\n    return;\n  }\n\n  // 是权限页面，需要判断token\n  const token = store.getters.token;\n  if (token) {\n    next();\n  } else {\n    next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Login","use","router","routes","path","component","authUrls","beforeEach","to","from","next","includes","token","store","getters"],"sources":["D:/daima/vueProject/rollpay-vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nconst Login = () => import('@/views/login')\n\nVue.use(VueRouter)\n\nconst router = new VueRouter({\n  routes: [\n    { path: '/login', component: Login }\n  ]\n})\n\n// 所有的路由在真正被访问到之前(解析渲染对应组件页面前)，都会先经过全局前置守卫\n// 只有全局前置守卫放行了，才会到达对应的页面\n\n// 全局前置导航守卫\n// to:   到哪里去，到哪去的完整路由信息对象 (路径，参数)\n// from: 从哪里来，从哪来的完整路由信息对象 (路径，参数)\n// next(): 是否放行\n// (1) next()     直接放行，放行到to要去的路径\n// (2) next(路径)  进行拦截，拦截到next里面配置的路径\n\n// 定义一个数组，专门用户存放所有需要权限访问的页面\nconst authUrls = ['/pay', '/myorder']\n\nrouter.beforeEach((to, from, next) => {\n  // console.log(to, from, next)\n  // 看 to.path 是否在 authUrls 中出现过\n  if (!authUrls.includes(to.path)) {\n    // 非权限页面，直接放行\n    next()\n    return\n  }\n\n  // 是权限页面，需要判断token\n  const token = store.getters.token\n  if (token) {\n    next()\n  } else {\n    next('/login')\n  }\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM,MAAM,CAAC,eAAe,CAAC;AAE3CF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAElB,MAAMG,MAAM,GAAG,IAAIH,SAAS,CAAC;EAC3BI,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAEL;EAAM,CAAC;AAExC,CAAC,CAAC;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMM,QAAQ,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;AAErCJ,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA;EACA,IAAI,CAACJ,QAAQ,CAACK,QAAQ,CAACH,EAAE,CAACJ,IAAI,CAAC,EAAE;IAC/B;IACAM,IAAI,CAAC,CAAC;IACN;EACF;;EAEA;EACA,MAAME,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACF,KAAK;EACjC,IAAIA,KAAK,EAAE;IACTF,IAAI,CAAC,CAAC;EACR,CAAC,MAAM;IACLA,IAAI,CAAC,QAAQ,CAAC;EAChB;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}