{"ast":null,"code":"import { adminLogin } from '@/api/login';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      username: 'admin',\n      password: '123456'\n    };\n  },\n  methods: {\n    // 登录\n    async login() {\n      if (this.username === null) {\n        this.$toast('用户名为空，请重新输入');\n        return;\n      }\n      if (this.password === null) {\n        this.$toast('密码为空，请重新输入');\n        return;\n      }\n      console.log('发送登录请求');\n      const res = await adminLogin(this.username, this.password);\n      console.log(res);\n      this.$store.commit('user/setUserInfo', res.data);\n      this.$toast('登录成功');\n\n      // 进行判断，看地址栏有无回跳地址\n      // 1. 如果有   => 说明是其他页面，拦截到登录来的，需要回跳\n      // 2. 如果没有 => 正常去首页\n      const url = this.$route.query.backUrl || '/';\n      this.$router.replace(url);\n    }\n  }\n};","map":{"version":3,"names":["adminLogin","name","data","username","password","methods","login","$toast","console","log","res","$store","commit","url","$route","query","backUrl","$router","replace"],"sources":["src/views/adminLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"container\">\r\n      <div class=\"title\">\r\n        <h3>管理员登录</h3>\r\n      </div>\r\n\r\n      <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"80px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"loginForm.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { adminLogin } from '@/api/login'\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  data () {\r\n    return {\r\n      username: 'admin',\r\n      password: '123456'\r\n    }\r\n  },\r\n  methods: {\r\n    // 登录\r\n    async login () {\r\n      if (this.username === null) {\r\n        this.$toast('用户名为空，请重新输入')\r\n        return\r\n      }\r\n      if (this.password === null) {\r\n        this.$toast('密码为空，请重新输入')\r\n        return\r\n      }\r\n\r\n      console.log('发送登录请求')\r\n\r\n      const res = await adminLogin(this.username, this.password)\r\n      console.log(res)\r\n      this.$store.commit('user/setUserInfo', res.data)\r\n      this.$toast('登录成功')\r\n\r\n      // 进行判断，看地址栏有无回跳地址\r\n      // 1. 如果有   => 说明是其他页面，拦截到登录来的，需要回跳\r\n      // 2. 如果没有 => 正常去首页\r\n      const url = this.$route.query.backUrl || '/'\r\n      this.$router.replace(url)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.container {\r\n  padding: 49px 29px;\r\n\r\n  .title {\r\n    margin-bottom: 20px;\r\n    h3 {\r\n      font-size: 26px;\r\n      font-weight: normal;\r\n    }\r\n    p {\r\n      line-height: 40px;\r\n      font-size: 14px;\r\n      color: #b8b8b8;\r\n    }\r\n  }\r\n\r\n  .form-item {\r\n    border-bottom: 1px solid #f3f1f2;\r\n    padding: 8px;\r\n    margin-bottom: 14px;\r\n    display: flex;\r\n    align-items: center;\r\n    .inp {\r\n      display: block;\r\n      border: none;\r\n      outline: none;\r\n      height: 32px;\r\n      font-size: 14px;\r\n      flex: 1;\r\n    }\r\n    img {\r\n      width: 94px;\r\n      height: 31px;\r\n    }\r\n    button {\r\n      height: 31px;\r\n      border: none;\r\n      font-size: 13px;\r\n      color: #cea26a;\r\n      background-color: transparent;\r\n      padding-right: 9px;\r\n    }\r\n  }\r\n\r\n  .login-btn {\r\n    width: 100%;\r\n    height: 42px;\r\n    margin-top: 39px;\r\n    background: linear-gradient(90deg,#ecb53c,#ff9211);\r\n    color: #fff;\r\n    border-radius: 39px;\r\n    box-shadow: 0 10px 20px 0 rgba(0,0,0,.1);\r\n    letter-spacing: 2px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAuBA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,MAAA;MACA,SAAAH,QAAA;QACA,KAAAI,MAAA;QACA;MACA;MACA,SAAAH,QAAA;QACA,KAAAG,MAAA;QACA;MACA;MAEAC,OAAA,CAAAC,GAAA;MAEA,MAAAC,GAAA,SAAAV,UAAA,MAAAG,QAAA,OAAAC,QAAA;MACAI,OAAA,CAAAC,GAAA,CAAAC,GAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,qBAAAF,GAAA,CAAAR,IAAA;MACA,KAAAK,MAAA;;MAEA;MACA;MACA;MACA,MAAAM,GAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,OAAA,CAAAL,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}